.......................................................................
 argv[1]: disasssembly file;
 argv[2]: arch: SM21|SM35|Maxwell|Kepler|SM52 
opcode changes:  MOV => RRO when bit [ 51 ]is flipped
opcode changes:  MOV => FCHK when bit [ 52 ]is flipped
opcode changes:  MOV => I2F when bit [ 53 ]is flipped
opcode changes:  MOV => ISCADD when bit [ 55 ]is flipped
opcode changes:  MOV => XMAD when bit [ 57 ]is flipped
opcode changes:  MOV => FSET when bit [ 58 ]is flipped
opcode changes:  MOV => FFMA32I when bit [ 62 ]is flipped
opcode changes:  LDG => STG when bit [ 51 ]is flipped
opcode changes:  LDG => ATOM when bit [ 53 ]is flipped
opcode changes:  LDG => ATOMS when bit [ 55 ]is flipped
opcode changes:  LDG => ISBERD when bit [ 56 ]is flipped
opcode changes:  LDG => ATOMS when bit [ 57 ]is flipped
opcode changes:  LDG => SUATOM when bit [ 58 ]is flipped
opcode changes:  LDG => ST when bit [ 62 ]is flipped
opcode changes:  FADD => DMNMX when bit [ 51 ]is flipped
opcode changes:  FADD => SHL when bit [ 52 ]is flipped
opcode changes:  FADD => ISCADD when bit [ 54 ]is flipped
opcode changes:  FADD => FSET when bit [ 58 ]is flipped
opcode changes:  FADD => VABSDIFF when bit [ 59 ]is flipped
opcode changes:  FADD => IADD32I when bit [ 62 ]is flipped
opcode changes:  FADD => TLD when bit [ 63 ]is flipped
opcode changes:  STG => LDG when bit [ 51 ]is flipped
opcode changes:  STG => LDG when bit [ 52 ]is flipped
opcode changes:  STG => ATOMS when bit [ 55 ]is flipped
opcode changes:  STG => ALD when bit [ 56 ]is flipped
opcode changes:  STG => ATOMS when bit [ 57 ]is flipped
opcode changes:  STG => ST when bit [ 62 ]is flipped
opcode changes:  EXIT => LONGJMP when bit [ 52 ]is flipped
opcode changes:  EXIT => RET when bit [ 53 ]is flipped
opcode changes:  EXIT => BRK when bit [ 54 ]is flipped
opcode changes:  EXIT => RAM when bit [ 55 ]is flipped
opcode changes:  EXIT => JMX when bit [ 56 ]is flipped
opcode changes:  EXIT => TEX when bit [ 61 ]is flipped
opcode changes:  EXIT => ST when bit [ 62 ]is flipped
opcode changes:  BRA => BRX when bit [ 52 ]is flipped
opcode changes:  BRA => CAL when bit [ 53 ]is flipped
opcode changes:  BRA => JMX when bit [ 54 ]is flipped
opcode changes:  BRA => GETCRSPTR when bit [ 55 ]is flipped
opcode changes:  BRA => BRK when bit [ 56 ]is flipped
opcode changes:  BRA => IPA when bit [ 57 ]is flipped
opcode changes:  BRA => TEX when bit [ 61 ]is flipped
opcode changes:  BRA => ST when bit [ 62 ]is flipped
opcode changes:  NOP => CSETP when bit [ 52 ]is flipped
opcode changes:  NOP => PSETP when bit [ 53 ]is flipped
opcode changes:  NOP => VSETP when bit [ 54 ]is flipped
opcode changes:  NOP => VABSDIFF4 when bit [ 55 ]is flipped
opcode changes:  NOP => FFMA when bit [ 56 ]is flipped
opcode changes:  NOP => IMADSP when bit [ 57 ]is flipped
opcode changes:  NOP => VABSDIFF when bit [ 58 ]is flipped
opcode changes:  NOP => FSET when bit [ 59 ]is flipped
opcode changes:  NOP => VSET when bit [ 60 ]is flipped
opcode changes:  NOP => HFMA2 when bit [ 61 ]is flipped
opcode changes:  NOP => IMAD32I when bit [ 62 ]is flipped
opcode changes:  NOP => TEXS when bit [ 63 ]is flipped
opcode changes:  F2F => SEL when bit [ 51 ]is flipped
opcode changes:  F2F => I2F when bit [ 52 ]is flipped
opcode changes:  F2F => FCHK when bit [ 53 ]is flipped
opcode changes:  F2F => P2R when bit [ 54 ]is flipped
opcode changes:  F2F => SHR when bit [ 55 ]is flipped
opcode changes:  F2F => FSET when bit [ 58 ]is flipped
opcode changes:  F2F => VABSDIFF when bit [ 59 ]is flipped
opcode changes:  F2F => HSET2 when bit [ 61 ]is flipped
opcode changes:  F2F => TLD when bit [ 63 ]is flipped
opcode changes:  I2I => P2R when bit [ 51 ]is flipped
opcode changes:  I2I => R2P when bit [ 52 ]is flipped
opcode changes:  I2I => IADD3 when bit [ 53 ]is flipped
opcode changes:  I2I => SEL when bit [ 54 ]is flipped
opcode changes:  I2I => FMNMX when bit [ 55 ]is flipped
opcode changes:  I2I => FSET when bit [ 58 ]is flipped
opcode changes:  I2I => VABSDIFF when bit [ 59 ]is flipped
opcode changes:  I2I => HSET2 when bit [ 61 ]is flipped
opcode changes:  I2I => TLD when bit [ 63 ]is flipped
opcode changes:  LOP => SHL when bit [ 51 ]is flipped
opcode changes:  LOP => DMNMX when bit [ 52 ]is flipped
opcode changes:  LOP => FMNMX when bit [ 53 ]is flipped
opcode changes:  LOP => BFE when bit [ 54 ]is flipped
opcode changes:  LOP => IADD3 when bit [ 55 ]is flipped
opcode changes:  LOP => FSET when bit [ 58 ]is flipped
opcode changes:  LOP => VABSDIFF when bit [ 59 ]is flipped
opcode changes:  LOP => HSET2 when bit [ 61 ]is flipped
opcode changes:  LOP => IADD32I when bit [ 62 ]is flipped
opcode changes:  LOP => TLD when bit [ 63 ]is flipped
opcode changes:  CSETP => NOP when bit [ 52 ]is flipped
opcode changes:  CSETP => MUFU when bit [ 53 ]is flipped
opcode changes:  CSETP => VOTE when bit [ 54 ]is flipped
opcode changes:  CSETP => FFMA when bit [ 56 ]is flipped
opcode changes:  CSETP => IMADSP when bit [ 57 ]is flipped
opcode changes:  CSETP => VABSDIFF when bit [ 58 ]is flipped
opcode changes:  CSETP => FSET when bit [ 59 ]is flipped
opcode changes:  CSETP => VSET when bit [ 60 ]is flipped
opcode changes:  CSETP => HFMA2 when bit [ 61 ]is flipped
opcode changes:  CSETP => IMAD32I when bit [ 62 ]is flipped
opcode changes:  CSETP => TEXS when bit [ 63 ]is flipped
opcode changes:  IADD => ISCADD when bit [ 51 ]is flipped
opcode changes:  IADD => BFE when bit [ 52 ]is flipped
opcode changes:  IADD => FLO when bit [ 53 ]is flipped
opcode changes:  IADD => DMNMX when bit [ 54 ]is flipped
opcode changes:  IADD => RRO when bit [ 55 ]is flipped
opcode changes:  IADD => HADD2 when bit [ 56 ]is flipped
opcode changes:  IADD => FSET when bit [ 58 ]is flipped
opcode changes:  IADD => VABSDIFF when bit [ 59 ]is flipped
opcode changes:  IADD => HSET2 when bit [ 61 ]is flipped
opcode changes:  IADD => IADD32I when bit [ 62 ]is flipped
opcode changes:  IADD => TLD when bit [ 63 ]is flipped
opcode changes:  SEL => F2F when bit [ 51 ]is flipped
opcode changes:  SEL => F2I when bit [ 52 ]is flipped
opcode changes:  SEL => DMUL when bit [ 53 ]is flipped
opcode changes:  SEL => I2I when bit [ 54 ]is flipped
opcode changes:  SEL => IMNMX when bit [ 55 ]is flipped
opcode changes:  SEL => FSET when bit [ 58 ]is flipped
opcode changes:  SEL => VABSDIFF when bit [ 59 ]is flipped
opcode changes:  SEL => HSET2 when bit [ 61 ]is flipped
opcode changes:  SEL => TLD when bit [ 63 ]is flipped
opcode changes:  DADD => FMNMX when bit [ 52 ]is flipped
opcode changes:  DADD => DMNMX when bit [ 53 ]is flipped
opcode changes:  DADD => FLO when bit [ 54 ]is flipped
opcode changes:  DADD => R2P when bit [ 55 ]is flipped
opcode changes:  DADD => FSET when bit [ 58 ]is flipped
opcode changes:  DADD => VABSDIFF when bit [ 59 ]is flipped
opcode changes:  DADD => HSET2 when bit [ 61 ]is flipped
opcode changes:  DADD => IADD32I when bit [ 62 ]is flipped
opcode changes:  DADD => TLD when bit [ 63 ]is flipped
opcode changes:  MOV32I => LOP3 when bit [ 57 ]is flipped
opcode changes:  MOV32I => LOP32I when bit [ 58 ]is flipped
opcode changes:  MOV32I => FADD32I when bit [ 59 ]is flipped
opcode changes:  MOV32I => IMAD32I when bit [ 60 ]is flipped
opcode changes:  MOV32I => VADD when bit [ 61 ]is flipped
opcode changes:  MOV32I => VSET when bit [ 62 ]is flipped
opcode changes:  MOV32I => LD when bit [ 63 ]is flipped
opcode changes:  ISETP => DFMA when bit [ 52 ]is flipped
opcode changes:  ISETP => ICMP when bit [ 53 ]is flipped
opcode changes:  ISETP => IMAD when bit [ 56 ]is flipped
opcode changes:  ISETP => DSET when bit [ 57 ]is flipped
opcode changes:  ISETP => XMAD when bit [ 58 ]is flipped
opcode changes:  ISETP => FADD32I when bit [ 62 ]is flipped
opcode changes:  ISETP => TLD4 when bit [ 63 ]is flipped
opcode changes:  ATOM => ATOMS when bit [ 56 ]is flipped
opcode changes:  ATOM => ST when bit [ 62 ]is flipped
opcode changes:  MOV => RRO when bit [ 51 ]is flipped
opcode changes:  MOV => FCHK when bit [ 52 ]is flipped
opcode changes:  MOV => I2F when bit [ 53 ]is flipped
opcode changes:  MOV => ISCADD when bit [ 55 ]is flipped
opcode changes:  MOV => XMAD when bit [ 57 ]is flipped
opcode changes:  MOV => FSET when bit [ 58 ]is flipped
opcode changes:  MOV => FFMA32I when bit [ 62 ]is flipped
opcode changes:  S2R => R2B when bit [ 51 ]is flipped
opcode changes:  S2R => TEXS when bit [ 61 ]is flipped
opcode changes:  S2R => ST when bit [ 62 ]is flipped
opcode changes:  S2R => HFMA2 when bit [ 63 ]is flipped
opcode changes:  VOTE => LEPC when bit [ 51 ]is flipped
opcode changes:  VOTE => CS2R when bit [ 52 ]is flipped
opcode changes:  VOTE => FSWZADD when bit [ 53 ]is flipped
opcode changes:  VOTE => CSET when bit [ 54 ]is flipped
opcode changes:  VOTE => VABSDIFF4 when bit [ 55 ]is flipped
opcode changes:  VOTE => FFMA when bit [ 56 ]is flipped
opcode changes:  VOTE => VABSDIFF when bit [ 58 ]is flipped
opcode changes:  VOTE => FSET when bit [ 59 ]is flipped
opcode changes:  VOTE => VSET when bit [ 60 ]is flipped
opcode changes:  VOTE => HFMA2 when bit [ 61 ]is flipped
opcode changes:  VOTE => IMAD32I when bit [ 62 ]is flipped
opcode changes:  VOTE => TEXS when bit [ 63 ]is flipped
opcode changes:  FLO => IMUL when bit [ 51 ]is flipped
opcode changes:  FLO => IMNMX when bit [ 52 ]is flipped
opcode changes:  FLO => IADD when bit [ 53 ]is flipped
opcode changes:  FLO => DADD when bit [ 54 ]is flipped
opcode changes:  FLO => F2I when bit [ 55 ]is flipped
opcode changes:  FLO => FSET when bit [ 58 ]is flipped
opcode changes:  FLO => VABSDIFF when bit [ 59 ]is flipped
opcode changes:  FLO => HSET2 when bit [ 61 ]is flipped
opcode changes:  FLO => IADD32I when bit [ 62 ]is flipped
opcode changes:  FLO => TLD when bit [ 63 ]is flipped
opcode changes:  POPC => BFE when bit [ 51 ]is flipped
opcode changes:  POPC => ISCADD when bit [ 52 ]is flipped
opcode changes:  POPC => SHR when bit [ 53 ]is flipped
opcode changes:  POPC => SHL when bit [ 54 ]is flipped
opcode changes:  POPC => FCHK when bit [ 55 ]is flipped
opcode changes:  POPC => HMUL2 when bit [ 56 ]is flipped
opcode changes:  POPC => FSET when bit [ 58 ]is flipped
opcode changes:  POPC => VABSDIFF when bit [ 59 ]is flipped
opcode changes:  POPC => HSET2 when bit [ 61 ]is flipped
opcode changes:  POPC => IADD32I when bit [ 62 ]is flipped
opcode changes:  POPC => TLD when bit [ 63 ]is flipped
opcode changes:  XMAD => ICMP when bit [ 54 ]is flipped
opcode changes:  XMAD => DSETP when bit [ 55 ]is flipped
opcode changes:  XMAD => IMAD when bit [ 56 ]is flipped
opcode changes:  XMAD => DSET when bit [ 57 ]is flipped
opcode changes:  XMAD => VMAD when bit [ 58 ]is flipped
opcode changes:  XMAD => HADD2 when bit [ 61 ]is flipped
opcode changes:  XMAD => LEA when bit [ 62 ]is flipped
opcode changes:  XMAD => TLDS when bit [ 63 ]is flipped
opcode changes:  SHFL => STL when bit [ 54 ]is flipped
opcode changes:  SHFL => LDC when bit [ 55 ]is flipped
opcode changes:  SHFL => ATOMS when bit [ 56 ]is flipped
opcode changes:  SHFL => ATOM when bit [ 57 ]is flipped
opcode changes:  SHFL => SULD when bit [ 58 ]is flipped
opcode changes:  SHFL => ST when bit [ 62 ]is flipped
opcode changes:  SSY => PLONGJMP when bit [ 52 ]is flipped
opcode changes:  SSY => PCNT when bit [ 53 ]is flipped
opcode changes:  SSY => GETLMEMBASE when bit [ 54 ]is flipped
opcode changes:  SSY => JMP when bit [ 55 ]is flipped
opcode changes:  SSY => IDE when bit [ 56 ]is flipped
opcode changes:  SSY => SUATOM when bit [ 59 ]is flipped
opcode changes:  SSY => TEX when bit [ 61 ]is flipped
opcode changes:  SSY => ST when bit [ 62 ]is flipped
opcode changes:  SSY => HFMA2 when bit [ 63 ]is flipped
opcode changes:  LDS => LDL when bit [ 51 ]is flipped
opcode changes:  LDS => STS when bit [ 52 ]is flipped
opcode changes:  LDS => ATOMS when bit [ 56 ]is flipped
opcode changes:  LDS => ATOM when bit [ 57 ]is flipped
opcode changes:  LDS => SURED when bit [ 58 ]is flipped
opcode changes:  LDS => ST when bit [ 62 ]is flipped
opcode changes:  ATOMS => ATOM when bit [ 53 ]is flipped
opcode changes:  ATOMS => LDL when bit [ 56 ]is flipped
opcode changes:  ATOMS => ST when bit [ 62 ]is flipped
opcode changes:  SYNC => DEPBAR when bit [ 51 ]is flipped
opcode changes:  SYNC => B2R when bit [ 54 ]is flipped
opcode changes:  SYNC => TEXS when bit [ 61 ]is flipped
opcode changes:  SYNC => ST when bit [ 62 ]is flipped
opcode changes:  SYNC => HFMA2 when bit [ 63 ]is flipped
opcode changes:  BFI => SHF when bit [ 51 ]is flipped
opcode changes:  BFI => LEA when bit [ 53 ]is flipped
opcode changes:  BFI => FSETP when bit [ 54 ]is flipped
opcode changes:  BFI => DFMA when bit [ 55 ]is flipped
opcode changes:  BFI => IMADSP when bit [ 57 ]is flipped
opcode changes:  BFI => FFMA when bit [ 58 ]is flipped
opcode changes:  BFI => LOP3 when bit [ 59 ]is flipped
opcode changes:  BFI => ISCADD32I when bit [ 61 ]is flipped
opcode changes:  BFI => HFMA2 when bit [ 62 ]is flipped
opcode changes:  BFI => ST when bit [ 63 ]is flipped
opcode changes:  BAR => TEXS when bit [ 61 ]is flipped
opcode changes:  BAR => ST when bit [ 62 ]is flipped
opcode changes:  BAR => HFMA2 when bit [ 63 ]is flipped
opcode changes:  B2R => SYNC when bit [ 54 ]is flipped
opcode changes:  B2R => IPA when bit [ 60 ]is flipped
opcode changes:  B2R => TEXS when bit [ 61 ]is flipped
opcode changes:  B2R => ST when bit [ 62 ]is flipped
opcode changes:  B2R => HFMA2 when bit [ 63 ]is flipped
opcode changes:  BFE => POPC when bit [ 51 ]is flipped
opcode changes:  BFE => IADD when bit [ 52 ]is flipped
opcode changes:  BFE => IMNMX when bit [ 53 ]is flipped
opcode changes:  BFE => LOP when bit [ 54 ]is flipped
opcode changes:  BFE => DMUL when bit [ 55 ]is flipped
opcode changes:  BFE => HFMA2 when bit [ 56 ]is flipped
opcode changes:  BFE => FSET when bit [ 58 ]is flipped
opcode changes:  BFE => VABSDIFF when bit [ 59 ]is flipped
opcode changes:  BFE => HSET2 when bit [ 61 ]is flipped
opcode changes:  BFE => IADD32I when bit [ 62 ]is flipped
opcode changes:  BFE => TLD when bit [ 63 ]is flipped
opcode changes:  CAL => PRET when bit [ 52 ]is flipped
opcode changes:  CAL => BRA when bit [ 53 ]is flipped
opcode changes:  CAL => JCAL when bit [ 54 ]is flipped
opcode changes:  CAL => SETCRSPTR when bit [ 55 ]is flipped
opcode changes:  CAL => RTT when bit [ 56 ]is flipped
opcode changes:  CAL => SUATOM when bit [ 59 ]is flipped
opcode changes:  CAL => TEX when bit [ 61 ]is flipped
opcode changes:  CAL => ST when bit [ 62 ]is flipped
opcode changes:  SHF => BFI when bit [ 51 ]is flipped
opcode changes:  SHF => LEA when bit [ 53 ]is flipped
opcode changes:  SHF => FSETP when bit [ 54 ]is flipped
opcode changes:  SHF => DFMA when bit [ 55 ]is flipped
opcode changes:  SHF => FFMA when bit [ 57 ]is flipped
opcode changes:  SHF => VMAD when bit [ 58 ]is flipped
opcode changes:  SHF => HADD2 when bit [ 61 ]is flipped
opcode changes:  SHF => LEA when bit [ 62 ]is flipped
opcode changes:  IADD32I => FMUL32I when bit [ 57 ]is flipped
opcode changes:  IADD32I => LEA when bit [ 58 ]is flipped
opcode changes:  IADD32I => ISCADD32I when bit [ 59 ]is flipped
opcode changes:  IADD32I => FFMA32I when bit [ 60 ]is flipped
opcode changes:  IADD32I => LOP3 when bit [ 61 ]is flipped
opcode changes:  IADD32I => ISCADD when bit [ 62 ]is flipped
opcode changes:  IADD32I => LD when bit [ 63 ]is flipped
opcode changes:  RET => LOP3 when bit [ 57 ]is flipped
opcode changes:  RET => LOP32I when bit [ 58 ]is flipped
opcode changes:  RET => FADD32I when bit [ 59 ]is flipped
opcode changes:  RET => IMAD32I when bit [ 60 ]is flipped
opcode changes:  RET => VADD when bit [ 61 ]is flipped
opcode changes:  RET => VSET when bit [ 62 ]is flipped
opcode changes:  RET => LD when bit [ 63 ]is flipped
opcode changes:  LOP3 => BFI when bit [ 52 ]is flipped
opcode changes:  LOP3 => PRMT when bit [ 53 ]is flipped
opcode changes:  LOP3 => FCMP when bit [ 54 ]is flipped
opcode changes:  LOP3 => ISETP when bit [ 55 ]is flipped
opcode changes:  LOP3 => IMADSP when bit [ 56 ]is flipped
opcode changes:  LOP3 => FFMA when bit [ 57 ]is flipped
opcode changes:  LOP3 => VMAD when bit [ 58 ]is flipped
opcode changes:  LOP3 => HADD2 when bit [ 61 ]is flipped
opcode changes:  LOP3 => LEA when bit [ 62 ]is flipped
opcode changes:  ICMP => ISET when bit [ 52 ]is flipped
opcode changes:  ICMP => ISETP when bit [ 53 ]is flipped
opcode changes:  ICMP => XMAD when bit [ 54 ]is flipped
opcode changes:  ICMP => PRMT when bit [ 55 ]is flipped
opcode changes:  ICMP => IMAD when bit [ 56 ]is flipped
opcode changes:  ICMP => DSET when bit [ 57 ]is flipped
opcode changes:  ICMP => VMAD when bit [ 58 ]is flipped
opcode changes:  ICMP => HADD2 when bit [ 61 ]is flipped
opcode changes:  ICMP => LEA when bit [ 62 ]is flipped
opcode changes:  IADD3 => I2I when bit [ 53 ]is flipped
opcode changes:  IADD3 => DMUL when bit [ 54 ]is flipped
opcode changes:  IADD3 => LOP when bit [ 55 ]is flipped
opcode changes:  IADD3 => VMNMX when bit [ 57 ]is flipped
opcode changes:  IADD3 => LOP3 when bit [ 58 ]is flipped
opcode changes:  IADD3 => FSET when bit [ 59 ]is flipped
opcode changes:  IADD3 => HFMA2_32I when bit [ 60 ]is flipped
opcode changes:  IADD3 => LEA when bit [ 61 ]is flipped
opcode changes:  IADD3 => HMUL2 when bit [ 62 ]is flipped
opcode changes:  IADD3 => ST when bit [ 63 ]is flipped
opcode changes:  ISET => ICMP when bit [ 52 ]is flipped
opcode changes:  ISET => DFMA when bit [ 53 ]is flipped
opcode changes:  ISET => LEA when bit [ 55 ]is flipped
opcode changes:  ISET => IMAD when bit [ 56 ]is flipped
opcode changes:  ISET => DSET when bit [ 57 ]is flipped
opcode changes:  ISET => VMAD when bit [ 58 ]is flipped
opcode changes:  ISET => HADD2 when bit [ 61 ]is flipped
opcode changes:  ISET => LEA when bit [ 62 ]is flipped
opcode changes:  SHR => IMNMX when bit [ 51 ]is flipped
opcode changes:  SHR => IMUL when bit [ 52 ]is flipped
opcode changes:  SHR => POPC when bit [ 53 ]is flipped
opcode changes:  SHR => FMUL when bit [ 54 ]is flipped
opcode changes:  SHR => F2F when bit [ 55 ]is flipped
opcode changes:  SHR => VMNMX when bit [ 57 ]is flipped
opcode changes:  SHR => LOP3 when bit [ 58 ]is flipped
opcode changes:  SHR => FSET when bit [ 59 ]is flipped
opcode changes:  SHR => HFMA2_32I when bit [ 60 ]is flipped
opcode changes:  SHR => LEA when bit [ 61 ]is flipped
opcode changes:  SHR => HMUL2 when bit [ 62 ]is flipped
opcode changes:  SHR => ST when bit [ 63 ]is flipped
opcode changes:  LOP32I => FFMA32I when bit [ 59 ]is flipped
opcode changes:  LOP32I => ISCADD32I when bit [ 60 ]is flipped
opcode changes:  LOP32I => LD when bit [ 63 ]is flipped
opcode changes:  RRO => MOV when bit [ 51 ]is flipped
opcode changes:  RRO => DMUL when bit [ 52 ]is flipped
opcode changes:  RRO => F2I when bit [ 53 ]is flipped
opcode changes:  RRO => IADD when bit [ 55 ]is flipped
opcode changes:  RRO => FSET when bit [ 58 ]is flipped
opcode changes:  RRO => VABSDIFF when bit [ 59 ]is flipped
opcode changes:  RRO => HSET2 when bit [ 61 ]is flipped
opcode changes:  RRO => TLD when bit [ 63 ]is flipped
opcode changes:  MUFU => PSET when bit [ 51 ]is flipped
opcode changes:  MUFU => PSETP when bit [ 52 ]is flipped
opcode changes:  MUFU => CSETP when bit [ 53 ]is flipped
opcode changes:  MUFU => FFMA when bit [ 56 ]is flipped
opcode changes:  MUFU => IMADSP when bit [ 57 ]is flipped
opcode changes:  MUFU => VABSDIFF when bit [ 58 ]is flipped
opcode changes:  MUFU => FSET when bit [ 59 ]is flipped
opcode changes:  MUFU => VSET when bit [ 60 ]is flipped
opcode changes:  MUFU => HFMA2 when bit [ 61 ]is flipped
opcode changes:  MUFU => IMAD32I when bit [ 62 ]is flipped
opcode changes:  MUFU => TEXS when bit [ 63 ]is flipped
opcode changes:  I2F => F2I when bit [ 51 ]is flipped
opcode changes:  I2F => F2F when bit [ 52 ]is flipped
opcode changes:  I2F => MOV when bit [ 53 ]is flipped
opcode changes:  I2F => SHF when bit [ 54 ]is flipped
opcode changes:  I2F => IMUL when bit [ 55 ]is flipped
opcode changes:  I2F => FSET when bit [ 58 ]is flipped
opcode changes:  I2F => VABSDIFF when bit [ 59 ]is flipped
opcode changes:  I2F => HSET2 when bit [ 61 ]is flipped
opcode changes:  I2F => TLD when bit [ 63 ]is flipped
opcode changes:  F2I => I2F when bit [ 51 ]is flipped
opcode changes:  F2I => SEL when bit [ 52 ]is flipped
opcode changes:  F2I => RRO when bit [ 53 ]is flipped
opcode changes:  F2I => R2P when bit [ 54 ]is flipped
opcode changes:  F2I => FLO when bit [ 55 ]is flipped
opcode changes:  F2I => FSET when bit [ 58 ]is flipped
opcode changes:  F2I => VABSDIFF when bit [ 59 ]is flipped
opcode changes:  F2I => HSET2 when bit [ 61 ]is flipped
opcode changes:  F2I => TLD when bit [ 63 ]is flipped
opcode changes:  FSETP => FCMP when bit [ 52 ]is flipped
opcode changes:  FSETP => BFI when bit [ 54 ]is flipped
opcode changes:  FSETP => XMAD when bit [ 55 ]is flipped
opcode changes:  FSETP => IMADSP when bit [ 57 ]is flipped
opcode changes:  FSETP => FFMA when bit [ 58 ]is flipped
opcode changes:  FSETP => LOP3 when bit [ 59 ]is flipped
opcode changes:  FSETP => ISCADD32I when bit [ 61 ]is flipped
opcode changes:  FSETP => HFMA2 when bit [ 62 ]is flipped
opcode changes:  FSETP => ST when bit [ 63 ]is flipped
opcode changes:  FMUL => FMNMX when bit [ 51 ]is flipped
opcode changes:  FMUL => SHL when bit [ 53 ]is flipped
opcode changes:  FMUL => SHR when bit [ 54 ]is flipped
opcode changes:  FMUL => P2R when bit [ 55 ]is flipped
opcode changes:  FMUL => VMNMX when bit [ 57 ]is flipped
opcode changes:  FMUL => LOP3 when bit [ 58 ]is flipped
opcode changes:  FMUL => FSET when bit [ 59 ]is flipped
opcode changes:  FMUL => HFMA2_32I when bit [ 60 ]is flipped
opcode changes:  FMUL => LEA when bit [ 61 ]is flipped
opcode changes:  FMUL => HMUL2 when bit [ 62 ]is flipped
opcode changes:  FMUL => ST when bit [ 63 ]is flipped
opcode changes:  SHL => LOP when bit [ 51 ]is flipped
opcode changes:  SHL => FADD when bit [ 52 ]is flipped
opcode changes:  SHL => FMUL when bit [ 53 ]is flipped
opcode changes:  SHL => POPC when bit [ 54 ]is flipped
opcode changes:  SHL => IADD3 when bit [ 55 ]is flipped
opcode changes:  SHL => VMNMX when bit [ 57 ]is flipped
opcode changes:  SHL => LOP3 when bit [ 58 ]is flipped
opcode changes:  SHL => FSET when bit [ 59 ]is flipped
opcode changes:  SHL => HFMA2_32I when bit [ 60 ]is flipped
opcode changes:  SHL => LEA when bit [ 61 ]is flipped
opcode changes:  SHL => HMUL2 when bit [ 62 ]is flipped
opcode changes:  SHL => ST when bit [ 63 ]is flipped
opcode changes:  FSET => FFMA when bit [ 57 ]is flipped
opcode changes:  FSET => IMADSP when bit [ 58 ]is flipped
opcode changes:  FSET => IADD3 when bit [ 59 ]is flipped
opcode changes:  FSET => VADD when bit [ 60 ]is flipped
opcode changes:  FSET => IMAD32I when bit [ 61 ]is flipped
opcode changes:  FSET => HFMA2 when bit [ 62 ]is flipped
opcode changes:  FSET => ST when bit [ 63 ]is flipped
opcode changes:  FFMA => DSET when bit [ 55 ]is flipped
opcode changes:  FFMA => FSET when bit [ 57 ]is flipped
opcode changes:  FFMA => DSETP when bit [ 58 ]is flipped
opcode changes:  FFMA => VMNMX when bit [ 59 ]is flipped
opcode changes:  FFMA => VADD when bit [ 60 ]is flipped
opcode changes:  FFMA => IMAD32I when bit [ 61 ]is flipped
opcode changes:  FFMA => HFMA2 when bit [ 62 ]is flipped
opcode changes:  FFMA => ST when bit [ 63 ]is flipped
opcode changes:  ISCADD => IADD when bit [ 51 ]is flipped
opcode changes:  ISCADD => POPC when bit [ 52 ]is flipped
opcode changes:  ISCADD => IMUL when bit [ 53 ]is flipped
opcode changes:  ISCADD => FADD when bit [ 54 ]is flipped
opcode changes:  ISCADD => MOV when bit [ 55 ]is flipped
opcode changes:  ISCADD => HSET2 when bit [ 56 ]is flipped
opcode changes:  ISCADD => FSET when bit [ 58 ]is flipped
opcode changes:  ISCADD => VABSDIFF when bit [ 59 ]is flipped
opcode changes:  ISCADD => HSET2 when bit [ 61 ]is flipped
opcode changes:  ISCADD => IADD32I when bit [ 62 ]is flipped
opcode changes:  ISCADD => TLD when bit [ 63 ]is flipped
opcode changes:  DSETP => FCMP when bit [ 53 ]is flipped
opcode changes:  DSETP => PRMT when bit [ 54 ]is flipped
opcode changes:  DSETP => XMAD when bit [ 55 ]is flipped
opcode changes:  DSETP => IMADSP when bit [ 57 ]is flipped
opcode changes:  DSETP => FFMA when bit [ 58 ]is flipped
opcode changes:  DSETP => LOP3 when bit [ 59 ]is flipped
opcode changes:  DSETP => ISCADD32I when bit [ 61 ]is flipped
opcode changes:  DSETP => HFMA2 when bit [ 62 ]is flipped
opcode changes:  DSETP => ST when bit [ 63 ]is flipped
opcode changes:  DSET => FFMA when bit [ 55 ]is flipped
opcode changes:  DSET => FSET when bit [ 56 ]is flipped
opcode changes:  DSET => XMAD when bit [ 57 ]is flipped
opcode changes:  DSET => HFMA2 when bit [ 58 ]is flipped
opcode changes:  DSET => XMAD when bit [ 59 ]is flipped
opcode changes:  DSET => HMUL2 when bit [ 61 ]is flipped
opcode changes:  DSET => LEA when bit [ 62 ]is flipped
opcode changes:  DSET => TEXS when bit [ 63 ]is flipped
opcode changes:  DMUL => FCHK when bit [ 51 ]is flipped
opcode changes:  DMUL => RRO when bit [ 52 ]is flipped
opcode changes:  DMUL => SEL when bit [ 53 ]is flipped
opcode changes:  DMUL => IADD3 when bit [ 54 ]is flipped
opcode changes:  DMUL => BFE when bit [ 55 ]is flipped
opcode changes:  DMUL => VMNMX when bit [ 57 ]is flipped
opcode changes:  DMUL => LOP3 when bit [ 58 ]is flipped
opcode changes:  DMUL => FSET when bit [ 59 ]is flipped
opcode changes:  DMUL => HFMA2_32I when bit [ 60 ]is flipped
opcode changes:  DMUL => LEA when bit [ 61 ]is flipped
opcode changes:  DMUL => HMUL2 when bit [ 62 ]is flipped
opcode changes:  DMUL => ST when bit [ 63 ]is flipped
opcode changes:  DFMA => BFI when bit [ 55 ]is flipped
opcode changes:  DFMA => IMAD when bit [ 56 ]is flipped
opcode changes:  DFMA => XMAD when bit [ 57 ]is flipped
opcode changes:  DFMA => VSHL when bit [ 58 ]is flipped
opcode changes:  DFMA => HFMA2 when bit [ 61 ]is flipped
opcode changes:  DFMA => IMAD32I when bit [ 62 ]is flipped
opcode changes:  LEA => SHF when bit [ 53 ]is flipped
opcode changes:  LEA => ISET when bit [ 55 ]is flipped
opcode changes:  LEA => FFMA when bit [ 57 ]is flipped
opcode changes:  LEA => VMAD when bit [ 58 ]is flipped
opcode changes:  LEA => HADD2 when bit [ 61 ]is flipped
opcode changes:  FCHK => DMUL when bit [ 51 ]is flipped
opcode changes:  FCHK => MOV when bit [ 52 ]is flipped
opcode changes:  FCHK => F2F when bit [ 53 ]is flipped
opcode changes:  FCHK => IADD3 when bit [ 54 ]is flipped
opcode changes:  FCHK => POPC when bit [ 55 ]is flipped
opcode changes:  FCHK => FSET when bit [ 58 ]is flipped
opcode changes:  FCHK => VABSDIFF when bit [ 59 ]is flipped
opcode changes:  FCHK => HSET2 when bit [ 61 ]is flipped
opcode changes:  FCHK => TLD when bit [ 63 ]is flipped
opcode changes:  ISCADD32I => IMAD32I when bit [ 58 ]is flipped
opcode changes:  ISCADD32I => FMUL32I when bit [ 59 ]is flipped
opcode changes:  ISCADD32I => LOP32I when bit [ 60 ]is flipped
opcode changes:  ISCADD32I => VSHR when bit [ 62 ]is flipped
opcode changes:  ISCADD32I => LD when bit [ 63 ]is flipped
opcode changes:  PSETP => CSET when bit [ 51 ]is flipped
opcode changes:  PSETP => MUFU when bit [ 52 ]is flipped
opcode changes:  PSETP => NOP when bit [ 53 ]is flipped
opcode changes:  PSETP => LEPC when bit [ 54 ]is flipped
opcode changes:  PSETP => VABSDIFF4 when bit [ 55 ]is flipped
opcode changes:  PSETP => FFMA when bit [ 56 ]is flipped
opcode changes:  PSETP => IMADSP when bit [ 57 ]is flipped
opcode changes:  PSETP => VABSDIFF when bit [ 58 ]is flipped
opcode changes:  PSETP => FSET when bit [ 59 ]is flipped
opcode changes:  PSETP => VSET when bit [ 60 ]is flipped
opcode changes:  PSETP => HFMA2 when bit [ 61 ]is flipped
opcode changes:  PSETP => IMAD32I when bit [ 62 ]is flipped
opcode changes:  PSETP => TEXS when bit [ 63 ]is flipped
opcode changes:  LDC => MEMBAR when bit [ 51 ]is flipped
opcode changes:  LDC => ISBERD when bit [ 54 ]is flipped
opcode changes:  LDC => SHFL when bit [ 55 ]is flipped
opcode changes:  LDC => ATOM when bit [ 57 ]is flipped
opcode changes:  LDC => SUATOM when bit [ 58 ]is flipped
opcode changes:  LDC => ST when bit [ 62 ]is flipped
opcode changes:  LDL => LDS when bit [ 51 ]is flipped
opcode changes:  LDL => STL when bit [ 52 ]is flipped
opcode changes:  LDL => CCTL when bit [ 53 ]is flipped
opcode changes:  LDL => ATOMS when bit [ 56 ]is flipped
opcode changes:  LDL => ATOM when bit [ 57 ]is flipped
opcode changes:  LDL => SURED when bit [ 58 ]is flipped
opcode changes:  LDL => ST when bit [ 62 ]is flipped
opcode changes:  IMAD => IMADSP when bit [ 55 ]is flipped
opcode changes:  IMAD => ISETP when bit [ 56 ]is flipped
opcode changes:  IMAD => FSET when bit [ 57 ]is flipped
opcode changes:  IMAD => HADD2 when bit [ 61 ]is flipped
opcode changes:  IMAD => LEA when bit [ 62 ]is flipped
opcode changes:  FMNMX => FMUL when bit [ 51 ]is flipped
opcode changes:  FMNMX => DADD when bit [ 52 ]is flipped
opcode changes:  FMNMX => LOP when bit [ 53 ]is flipped
opcode changes:  FMNMX => IMNMX when bit [ 54 ]is flipped
opcode changes:  FMNMX => I2I when bit [ 55 ]is flipped
opcode changes:  FMNMX => FSET when bit [ 58 ]is flipped
opcode changes:  FMNMX => VABSDIFF when bit [ 59 ]is flipped
opcode changes:  FMNMX => HSET2 when bit [ 61 ]is flipped
opcode changes:  FMNMX => IADD32I when bit [ 62 ]is flipped
opcode changes:  FMNMX => TLD when bit [ 63 ]is flipped
opcode changes:  DMNMX => FADD when bit [ 51 ]is flipped
opcode changes:  DMNMX => LOP when bit [ 52 ]is flipped
opcode changes:  DMNMX => DADD when bit [ 53 ]is flipped
opcode changes:  DMNMX => IADD when bit [ 54 ]is flipped
opcode changes:  DMNMX => FSET when bit [ 58 ]is flipped
opcode changes:  DMNMX => VABSDIFF when bit [ 59 ]is flipped
opcode changes:  DMNMX => HSET2 when bit [ 61 ]is flipped
opcode changes:  DMNMX => IADD32I when bit [ 62 ]is flipped
opcode changes:  DMNMX => TLD when bit [ 63 ]is flipped
opcode changes:  IMNMX => SHR when bit [ 51 ]is flipped
opcode changes:  IMNMX => FLO when bit [ 52 ]is flipped
opcode changes:  IMNMX => BFE when bit [ 53 ]is flipped
opcode changes:  IMNMX => FMNMX when bit [ 54 ]is flipped
opcode changes:  IMNMX => SEL when bit [ 55 ]is flipped
opcode changes:  IMNMX => HSETP2 when bit [ 56 ]is flipped
opcode changes:  IMNMX => FSET when bit [ 58 ]is flipped
opcode changes:  IMNMX => VABSDIFF when bit [ 59 ]is flipped
opcode changes:  IMNMX => HSET2 when bit [ 61 ]is flipped
opcode changes:  IMNMX => IADD32I when bit [ 62 ]is flipped
opcode changes:  IMNMX => TLD when bit [ 63 ]is flipped
opcode changes:  MEMBAR => LDC when bit [ 51 ]is flipped
opcode changes:  MEMBAR => ALD when bit [ 54 ]is flipped
opcode changes:  MEMBAR => ATOM when bit [ 57 ]is flipped
opcode changes:  MEMBAR => SUATOM when bit [ 58 ]is flipped
opcode changes:  MEMBAR => ST when bit [ 62 ]is flipped
opcode changes:  CCTL => STL when bit [ 53 ]is flipped
opcode changes:  CCTL => AST when bit [ 55 ]is flipped
opcode changes:  CCTL => ATOM when bit [ 56 ]is flipped
opcode changes:  CCTL => ATOM when bit [ 57 ]is flipped
opcode changes:  CCTL => ST when bit [ 62 ]is flipped
opcode changes:  CCTLL => LDC when bit [ 52 ]is flipped
opcode changes:  CCTLL => AL2P when bit [ 53 ]is flipped
opcode changes:  CCTLL => ATOM when bit [ 57 ]is flipped
opcode changes:  CCTLL => SUATOM when bit [ 58 ]is flipped
opcode changes:  CCTLL => ST when bit [ 62 ]is flipped
opcode changes:  LD => ST when bit [ 61 ]is flipped
opcode changes:  LD => TEX when bit [ 62 ]is flipped
opcode changes:  PRMT => LEA when bit [ 52 ]is flipped
opcode changes:  PRMT => LOP3 when bit [ 53 ]is flipped
opcode changes:  PRMT => DSETP when bit [ 54 ]is flipped
opcode changes:  PRMT => ICMP when bit [ 55 ]is flipped
opcode changes:  PRMT => IMADSP when bit [ 56 ]is flipped
opcode changes:  PRMT => FFMA when bit [ 57 ]is flipped
opcode changes:  PRMT => VMAD when bit [ 58 ]is flipped
opcode changes:  PRMT => HADD2 when bit [ 61 ]is flipped
opcode changes:  PRMT => LEA when bit [ 62 ]is flipped
opcode changes:  VABSDIFF => VSHR when bit [ 57 ]is flipped
opcode changes:  VABSDIFF => VABSDIFF4 when bit [ 58 ]is flipped
opcode changes:  VABSDIFF => IMNMX when bit [ 59 ]is flipped
opcode changes:  VABSDIFF => HFMA2 when bit [ 61 ]is flipped
opcode changes:  VABSDIFF => ISCADD32I when bit [ 62 ]is flipped
opcode changes:  VABSDIFF => TEXS when bit [ 63 ]is flipped
opcode changes:  PSET => MUFU when bit [ 51 ]is flipped
opcode changes:  PSET => CSET when bit [ 52 ]is flipped
opcode changes:  PSET => CS2R when bit [ 54 ]is flipped
opcode changes:  PSET => VABSDIFF4 when bit [ 55 ]is flipped
opcode changes:  PSET => FFMA when bit [ 56 ]is flipped
opcode changes:  PSET => IMADSP when bit [ 57 ]is flipped
opcode changes:  PSET => VABSDIFF when bit [ 58 ]is flipped
opcode changes:  PSET => FSET when bit [ 59 ]is flipped
opcode changes:  PSET => VSET when bit [ 60 ]is flipped
opcode changes:  PSET => HFMA2 when bit [ 61 ]is flipped
opcode changes:  PSET => IMAD32I when bit [ 62 ]is flipped
opcode changes:  PSET => TEXS when bit [ 63 ]is flipped
opcode changes:  STL => STS when bit [ 51 ]is flipped
opcode changes:  STL => LDL when bit [ 52 ]is flipped
opcode changes:  STL => CCTL when bit [ 53 ]is flipped
opcode changes:  STL => SHFL when bit [ 54 ]is flipped
opcode changes:  STL => ISBERD when bit [ 55 ]is flipped
opcode changes:  STL => ATOMS when bit [ 56 ]is flipped
opcode changes:  STL => ATOM when bit [ 57 ]is flipped
opcode changes:  STL => SURED when bit [ 58 ]is flipped
opcode changes:  STL => ST when bit [ 62 ]is flipped
opcode changes:  STS => STL when bit [ 51 ]is flipped
opcode changes:  STS => LDS when bit [ 52 ]is flipped
opcode changes:  STS => CCTL when bit [ 53 ]is flipped
opcode changes:  STS => ALD when bit [ 55 ]is flipped
opcode changes:  STS => ATOMS when bit [ 56 ]is flipped
opcode changes:  STS => ATOM when bit [ 57 ]is flipped
opcode changes:  STS => SURED when bit [ 58 ]is flipped
opcode changes:  STS => ST when bit [ 62 ]is flipped

Done: found out bits represents opcode on Kepler....
Opcodes positons: Set([51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63])
Then we could enumate in the space....
